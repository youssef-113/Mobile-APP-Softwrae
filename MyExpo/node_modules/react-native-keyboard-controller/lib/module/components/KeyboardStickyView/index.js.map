{"version":3,"names":["React","forwardRef","useMemo","Animated","useKeyboardAnimation","KeyboardStickyView","children","offset","closed","opened","style","enabled","props","ref","height","progress","interpolate","inputRange","outputRange","styles","transform","translateY","add","createElement","View","_extends"],"sources":["index.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from \"react\";\nimport { Animated } from \"react-native\";\n\nimport { useKeyboardAnimation } from \"../../hooks\";\n\nimport type { View, ViewProps } from \"react-native\";\n\nexport type KeyboardStickyViewProps = {\n  /**\n   * Specify additional offset to the view for given keyboard state.\n   */\n  offset?: {\n    /**\n     * Adds additional `translateY` when keyboard is close. By default `0`.\n     */\n    closed?: number;\n    /**\n     * Adds additional `translateY` when keyboard is open. By default `0`.\n     */\n    opened?: number;\n  };\n\n  /** Controls whether this `KeyboardStickyView` instance should take effect. Default is `true` */\n  enabled?: boolean;\n} & ViewProps;\n\nconst KeyboardStickyView = forwardRef<\n  View,\n  React.PropsWithChildren<KeyboardStickyViewProps>\n>(\n  (\n    {\n      children,\n      offset: { closed = 0, opened = 0 } = {},\n      style,\n      enabled = true,\n      ...props\n    },\n    ref,\n  ) => {\n    const { height, progress } = useKeyboardAnimation();\n\n    const offset = progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [closed, opened],\n    });\n\n    const styles = useMemo(\n      () => [\n        {\n          transform: [\n            { translateY: enabled ? Animated.add(height, offset) : closed },\n          ],\n        },\n        style,\n      ],\n      [closed, enabled, height, offset, style],\n    );\n\n    return (\n      <Animated.View ref={ref} style={styles} {...props}>\n        {children}\n      </Animated.View>\n    );\n  },\n);\n\nexport default KeyboardStickyView;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,cAAc;AAEvC,SAASC,oBAAoB,QAAQ,aAAa;AAuBlD,MAAMC,kBAAkB,gBAAGJ,UAAU,CAInC,CACE;EACEK,QAAQ;EACRC,MAAM,EAAE;IAAEC,MAAM,GAAG,CAAC;IAAEC,MAAM,GAAG;EAAE,CAAC,GAAG,CAAC,CAAC;EACvCC,KAAK;EACLC,OAAO,GAAG,IAAI;EACd,GAAGC;AACL,CAAC,EACDC,GAAG,KACA;EACH,MAAM;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGX,oBAAoB,CAAC,CAAC;EAEnD,MAAMG,MAAM,GAAGQ,QAAQ,CAACC,WAAW,CAAC;IAClCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBC,WAAW,EAAE,CAACV,MAAM,EAAEC,MAAM;EAC9B,CAAC,CAAC;EAEF,MAAMU,MAAM,GAAGjB,OAAO,CACpB,MAAM,CACJ;IACEkB,SAAS,EAAE,CACT;MAAEC,UAAU,EAAEV,OAAO,GAAGR,QAAQ,CAACmB,GAAG,CAACR,MAAM,EAAEP,MAAM,CAAC,GAAGC;IAAO,CAAC;EAEnE,CAAC,EACDE,KAAK,CACN,EACD,CAACF,MAAM,EAAEG,OAAO,EAAEG,MAAM,EAAEP,MAAM,EAAEG,KAAK,CACzC,CAAC;EAED,oBACEV,KAAA,CAAAuB,aAAA,CAACpB,QAAQ,CAACqB,IAAI,EAAAC,QAAA;IAACZ,GAAG,EAAEA,GAAI;IAACH,KAAK,EAAES;EAAO,GAAKP,KAAK,GAC9CN,QACY,CAAC;AAEpB,CACF,CAAC;AAED,eAAeD,kBAAkB","ignoreList":[]}